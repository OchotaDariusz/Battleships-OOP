@startuml
skinparam packageStyle rectangle

package com.codecool.battleship.ships {
  class Ship
  enum ShipType
}

package com.codecool.battleship.board {
  interface BoardFactory
  class Board implements BoardFactory
  Board *-- Square
  Square *-- SquareStatus
  enum SquareStatus
}

package com.codecool.battleship.players {
  abstract class AbstractPlayer
  class UserPlayer extends AbstractPlayer
  abstract class ComputerPlayer extends AbstractPlayer
  class ComputerPlayerEasy extends ComputerPlayer
  class ComputerPlayerNormal extends ComputerPlayer
  class ComputerPlayerHard extends ComputerPlayer
}

package com.codecool.battleship.io {
  class Display
  class Input
}

package com.codecool.battleship {
  Battleship *-- Display
  Battleship *-- Input
  class Battleship
}

class Battleship {
  -Display display
  -Input input
  -int gameMode
  -int gamePhase
  -int getGamePhase()
  -AbstractPlayer[] players
  +void setGamePhase(int gamePhase)
  -void setGameMode(int gameMode)
  -void mainLoop()
  -void displayMenu()
  +void startGame()
  -void displayHighScores(int playerId)
  -void exit()
  -void makeMove(int playerId)
  -boolean checkIfHit()
  -boolean checkIfShipSunk()
  -boolean checkIfWon()
  -void chooseGameMode(Battleship battleship)
  -void setupPlayers()
}

class Display {
  +void printMenu()
  +void printBoard(Board board1, Board board2)
  +void printGameplay()
  +void printWinner(int playerId)
}

class Input {
  +boolean validateForBoardSize(int size)
  +String askForInput(String label)
  +boolean validateGameMode(String input)
  +boolean validateInput(String input, int size)
  -int[] convertCoords(String input)
}

abstract class AbstractPlayer {
  -List<Ship> ships
  +List<Ship> getShips()
  +void addShip(Ship ship)
  +boolean isAlive()
  +{abstract} void makeMove()
}

abstract class ComputerPlayer {
  -List<String> alreadyStruckFields
  +List<String> getAlreadyStruckFields()
  +void addStrike()
}

interface BoardFactory {
  +void randomPlacement()
  +void manualPlacement()
}

class Board {
  -Square[][] ocean
  +Square[][] getOcean()
  +boolean isPlacementOk()
}

class Ship {
  -List<Square> coords
  +List<Square> getCoords()
}

enum ShipType {
  CARRIER(1),
  CRUISER(2),
  BATTLESHIP(3),
  SUBMARINE(4),
  DESTROYER(5)

  -int shipLength
  ShipType(int length)
}

class Square {
  -int x
  -int y
  -SquareStatus squareStatus
  +int getX()
  +int getY()
  +SquareStatus getSquareStatus()
  +void showSquareStatus()
}

enum SquareStatus {
  EMPTY(" "),
  SHIP("ðŸš¢"),
  HIT("X"),
  MISSED("â—Ž")

  -String character
  +String getCharacter()

  SquareStatus(String character)
}
@enduml